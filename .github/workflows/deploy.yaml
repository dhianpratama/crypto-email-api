name: CI/CD Deploy

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22]
    
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          sam deploy \
            --stack-name CryptoAlertStagingStack \
            --template-file template.yaml \
            --parameter-overrides Env=staging \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          sam deploy \
            --stack-name CryptoAlertProdStack \
            --template-file template.yaml \
            --parameter-overrides Env=prod \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset
